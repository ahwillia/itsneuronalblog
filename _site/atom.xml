<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Its 
 Neuronal</title>
 <link href="http://alexhwilliams.info/atom.xml" rel="self"/>
 <link href="http://alexhwilliams.info/"/>
 <updated>2015-10-01T13:15:48-07:00</updated>
 <id>http://alexhwilliams.info</id>
 <author>
   <name>Alex Williams</name>
   <email></email>
 </author>

 
 <entry>
   <title>Improved clustering by using prior knowledge</title>
   <link href="http://alexhwilliams.info/2015/11/01/clustering3/"/>
   <updated>2015-11-01T00:00:00-07:00</updated>
   <id>http://alexhwilliams.info/2015/11/01/clustering3</id>
   <content type="html">&lt;p&gt;Papers:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;http://dx.doi.org/10.1038/nmeth.2651&lt;/li&gt;
  &lt;li&gt;https://www.youtube.com/watch?v=KYW-jEs-eSM&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Is clustering mathematically impossible?</title>
   <link href="http://alexhwilliams.info/2015/10/01/clustering2/"/>
   <updated>2015-10-01T00:00:00-07:00</updated>
   <id>http://alexhwilliams.info/2015/10/01/clustering2</id>
   <content type="html">&lt;p&gt;In the &lt;a href=&quot;http://localhost:4000/itsneuronalblog/2015/09/11/clustering1/&quot;&gt;previous post&lt;/a&gt;, we saw intuitive reasons why clustering is a hard,&lt;a href=&quot;#f1b&quot; id=&quot;f1t&quot;&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/a&gt; and maybe even &lt;em&gt;ill-defined&lt;/em&gt;, problem. In practice, we are often stuck using heuristics that can sometimes perform quite badly when their assumptions are violated (see &lt;a href=&quot;https://en.wikipedia.org/wiki/No_free_lunch_theorem&quot;&gt;&lt;em&gt;No free lunch theorem&lt;/em&gt;&lt;/a&gt;). Is there a mathematical way of expressing all of these difficulties? This post will cover some theoretical results of &lt;a href=&quot;/itsneuronalblog/papers/clustering/Kleinberg_2002.pdf&quot;&gt;Kleinberg (2002)&lt;/a&gt; related to this question.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Notation.&lt;/em&gt;&lt;/strong&gt; Suppose we have a set of $N$ datapoints $x^{(1)}, x^{(2)}, …, x^{(N)}$. A &lt;em&gt;clustering function&lt;/em&gt; produces a &lt;a href=&quot;https://en.wikipedia.org/wiki/Partition_of_a_set&quot;&gt;&lt;em&gt;partition&lt;/em&gt;&lt;/a&gt; (i.e. a set of clusters), based on the pairwise distances between datapoints. The distance between two points $x^{(i)}$ and $x^{(j)}$ is given by $d(x^{(i)},x^{(j)})$, where $d$ is the &lt;em&gt;distance function&lt;/em&gt;. We could choose different ways to measure distance,&lt;a href=&quot;#f2b&quot; id=&quot;f2t&quot;&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/a&gt; for simplicity you can imagine we are using &lt;a href=&quot;https://en.wikipedia.org/wiki/Euclidean_distance&quot;&gt;Euclidean distance&lt;/a&gt;, $\sqrt{ (x^{(i)}-x^{(j)}) \cdot (x^{(i)}-x^{(j)})}$.&lt;/p&gt;

&lt;h3 id=&quot;an-axiomatic-approach-to-clustering&quot;&gt;An axiomatic approach to clustering&lt;/h3&gt;

&lt;p&gt;There are many possible clustering functions we could come up with. Some are stupid — randomly split the data into two groups — and others are useful in practice. We would like to precisely define what it means for a clustering function to be “useful in practice.”&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/itsneuronalblog/papers/clustering/Kleinberg_2002.pdf&quot;&gt;Kleinberg (2002)&lt;/a&gt; proposed that the ideal clustering function would achieve three properties: &lt;a href=&quot;/itsneuronalblog/2015/10/01/clustering2/#scale-invariance&quot;&gt;&lt;em&gt;scale-invariance&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;/itsneuronalblog/2015/10/01/clustering2/#consistency&quot;&gt;&lt;em&gt;consistency&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;/itsneuronalblog/2015/10/01/clustering2/#richness&quot;&gt;&lt;em&gt;richness&lt;/em&gt;&lt;/a&gt;. The idea is that these principles should align with your intuitive notion of what a “good clustering function” is:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Scale-invariance:&lt;/strong&gt; An ideal clustering function does not change its result when the data are scaled equally in all directions.&lt;/p&gt;

&lt;!--
Credit goes to http://stackoverflow.com/questions/19331362/using-an-image-caption-in-markdown-jekyll
 --&gt;
&lt;table class=&quot;image&quot;&gt;
&lt;!-- &lt;caption align=&quot;bottom&quot;&gt;&lt;b&gt;Scale-invariance.. &lt;/b&gt;For any scalar $\alpha &gt; 0$ the clustering function $f$ produces same result when the distances, $d$, between all datapoints are multiplied: $f(d) = f(\alpha \cdot d)$.&lt;/caption&gt; --&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/itsneuronalblog/img/clustering/clustering-scale-invariance.png&quot; alt=&quot;For any scalar $\alpha &amp;gt; 0$ the clustering function $f$ produces same result when the distances, $d$, between all datapoints are multiplied: $f(d) = f(\alpha \cdot d)$.&quot; width=&quot;500px&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p style=&quot;text-align:center; padding:0 50px; font-size:15px;&quot;&gt;
	&lt;b&gt;Scale-invariance.&lt;/b&gt;
	For any scalar $\alpha &amp;gt; 0$ the clustering function $f$ produces same result when the distances, $d$, between all datapoints are multiplied: $f(d) = f(\alpha \cdot d)$.
&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;2. Consistency:&lt;/strong&gt; If we stretch the data so that the distances between clusters increases and/or the distances within clusters decreases, then the clustering shouldn’t change.&lt;/p&gt;

&lt;!--
Credit goes to http://stackoverflow.com/questions/19331362/using-an-image-caption-in-markdown-jekyll
 --&gt;
&lt;table class=&quot;image&quot;&gt;
&lt;!-- &lt;caption align=&quot;bottom&quot;&gt;&lt;b&gt;Consistency.. &lt;/b&gt;Let $d$ and $d^\prime$ be two distance functions. The clustering function produces a partition of points for the first distance function, $d$. If, for every pair $(i,j)$ belonging to the &lt;i&gt;same&lt;/i&gt; cluster, $d(i,j) \geq d^\prime(i,j)$, and for every pair belonging to &lt;i&gt;different&lt;/i&gt; clusters, $d(i,j) \leq d^\prime(i,j)$ then the clustering result shouldn&#39;t change: $f(d) = f(d^\prime)$&lt;/caption&gt; --&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/itsneuronalblog/img/clustering/clustering-consistency.png&quot; alt=&quot;Let $d$ and $d^\prime$ be two distance functions. The clustering function produces a partition of points for the first distance function, $d$. If, for every pair $(i,j)$ belonging to the &amp;lt;i&amp;gt;same&amp;lt;/i&amp;gt; cluster, $d(i,j) \geq d^\prime(i,j)$, and for every pair belonging to &amp;lt;i&amp;gt;different&amp;lt;/i&amp;gt; clusters, $d(i,j) \leq d^\prime(i,j)$ then the clustering result shouldn&#39;t change: $f(d) = f(d^\prime)$&quot; width=&quot;500px&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p style=&quot;text-align:center; padding:0 50px; font-size:15px;&quot;&gt;
	&lt;b&gt;Consistency.&lt;/b&gt;
	Let $d$ and $d^\prime$ be two distance functions. The clustering function produces a partition of points for the first distance function, $d$. If, for every pair $(i,j)$ belonging to the &lt;i&gt;same&lt;/i&gt; cluster, $d(i,j) \geq d^\prime(i,j)$, and for every pair belonging to &lt;i&gt;different&lt;/i&gt; clusters, $d(i,j) \leq d^\prime(i,j)$ then the clustering result shouldn&#39;t change: $f(d) = f(d^\prime)$
&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;3. Richness:&lt;/strong&gt; Suppose a dataset contains $N$ points, but we are not told anything about the distances between points. An ideal clustering function would be flexible enough to produce all possible partition/clusterings of this set. This means that the it automatically determines both the number and proportions of clusters in the dataset. This is shown schemetically below for a set of six datapoints:&lt;/p&gt;

&lt;!--
Credit goes to http://stackoverflow.com/questions/19331362/using-an-image-caption-in-markdown-jekyll
 --&gt;
&lt;table class=&quot;image&quot;&gt;
&lt;!-- &lt;caption align=&quot;bottom&quot;&gt;&lt;b&gt;Richness.. &lt;/b&gt;For a clustering function, $f$, richness implies that $\text{Range}(f)$ is equal to all possible partitions of a set of length $N$.&lt;/caption&gt; --&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/itsneuronalblog/img/clustering/clustering-richness.png&quot; alt=&quot;For a clustering function, $f$, richness implies that $\text{Range}(f)$ is equal to all possible partitions of a set of length $N$.&quot; width=&quot;500px&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p style=&quot;text-align:center; padding:0 50px; font-size:15px;&quot;&gt;
	&lt;b&gt;Richness.&lt;/b&gt;
	For a clustering function, $f$, richness implies that $\text{Range}(f)$ is equal to all possible partitions of a set of length $N$.
&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&quot;kleinbergs-impossibility-theorem&quot;&gt;Kleinberg’s &lt;em&gt;Impossibility Theorem&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;/itsneuronalblog/papers/clustering/Kleinberg_2002.pdf&quot;&gt;Kleinberg’s paper&lt;/a&gt; is a bait-and-switch though. &lt;strong&gt;&lt;em&gt;It turns out that no clustering function can satisfy all three axioms!&lt;/em&gt;&lt;/strong&gt; &lt;a href=&quot;#f3b&quot; id=&quot;f3t&quot;&gt;&lt;sup&gt;[3]&lt;/sup&gt;&lt;/a&gt; The proof in Kleinberg’s paper is a little terse — A simpler proof is given in &lt;a href=&quot;http://www.cs.fsu.edu/~ackerman/thesisPhD.pdf&quot;&gt;Margareta Ackerman’s thesis&lt;/a&gt;, specifically Theorem 21. The intuition provided there is diagrammed below.&lt;/p&gt;

&lt;!--
Credit goes to http://stackoverflow.com/questions/19331362/using-an-image-caption-in-markdown-jekyll
 --&gt;
&lt;table class=&quot;image&quot;&gt;
&lt;!-- &lt;caption align=&quot;bottom&quot;&gt;&lt;b&gt;Intuition behind impossibility.. &lt;/b&gt;A consequence of the richness axiom is that we can define two different distance functions, $d_1$ (top left) and $d_2$ (bottom right), that respectively put all the data points into individual clusters and into some other clustering. Then we can define a third distance function $d_3$ (top and bottom right) that simply scales $d_2$ so that the minimum distance between points in $d_3$ space is larger than the maximum distance in $d_1$ space. Then, we arrive at a contradiction, since by consistency the clustering should be the same for the $d_1 \rightarrow d_3$ transformation, but also the same for the $d_2 \rightarrow d_3$ transformation.&lt;/caption&gt; --&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/itsneuronalblog/img/clustering/impossibility-intuition.png&quot; alt=&quot;A consequence of the richness axiom is that we can define two different distance functions, $d_1$ (top left) and $d_2$ (bottom right), that respectively put all the data points into individual clusters and into some other clustering. Then we can define a third distance function $d_3$ (top and bottom right) that simply scales $d_2$ so that the minimum distance between points in $d_3$ space is larger than the maximum distance in $d_1$ space. Then, we arrive at a contradiction, since by consistency the clustering should be the same for the $d_1 \rightarrow d_3$ transformation, but also the same for the $d_2 \rightarrow d_3$ transformation.&quot; width=&quot;350px&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p style=&quot;text-align:center; padding:0 50px; font-size:15px;&quot;&gt;
	&lt;b&gt;Intuition behind impossibility.&lt;/b&gt;
	A consequence of the richness axiom is that we can define two different distance functions, $d_1$ (top left) and $d_2$ (bottom right), that respectively put all the data points into individual clusters and into some other clustering. Then we can define a third distance function $d_3$ (top and bottom right) that simply scales $d_2$ so that the minimum distance between points in $d_3$ space is larger than the maximum distance in $d_1$ space. Then, we arrive at a contradiction, since by consistency the clustering should be the same for the $d_1 \rightarrow d_3$ transformation, but also the same for the $d_2 \rightarrow d_3$ transformation.
&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&quot;clustering-functions-that-satisfy-two-of-the-three-axioms&quot;&gt;Clustering functions that satisfy two of the three axioms&lt;/h3&gt;

&lt;p&gt;The above explanation may still be a bit difficult to digest. Another perspective for understanding the impossibility theory is to examine clustering functions that come close to satisfying the three axioms.&lt;/p&gt;

&lt;p&gt;Kleinberg mentions three variants of &lt;a href=&quot;https://en.wikipedia.org/wiki/Single-linkage_clustering&quot;&gt;single-linkage clustering&lt;/a&gt; as an illustration. Single-linkage clustering starts by assigning each point to its own cluster, and then repeatedly fusing together the nearest clusters (where &lt;em&gt;nearest&lt;/em&gt; is measured by our specified distance function). To complete the clustering function we need a &lt;em&gt;stopping condition&lt;/em&gt; — something that tells us when to terminate and return the current set of clusters as our solution. Kleinberg outlines three different stopping conditions, each of which violates one of his three axioms, while satisfying the other two.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. $k$-cluster stopping condition:&lt;/strong&gt; Stop fusing clusters once we have $k$ clusters (where $k$ is some number provided beforehand, similar to the &lt;a href=&quot;https://en.wikipedia.org/wiki/K-means_clustering&quot;&gt;k-means algorithm&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;This clearly violates the &lt;em&gt;richness&lt;/em&gt; axiom. For example, if we choose $k=3$, then we could never return a result with 2 clusters, 4 clusters, etc. However, it satisfies &lt;em&gt;scale-invariance&lt;/em&gt; and &lt;em&gt;consistency&lt;/em&gt;. To check this, notice that the transformations in the above diagrams above do not change which $k$ clusters are nearest to each other. It is only once we start merging and dividing clusters that we get into trouble.&lt;/p&gt;

&lt;!--
Credit goes to http://stackoverflow.com/questions/19331362/using-an-image-caption-in-markdown-jekyll
 --&gt;
&lt;table class=&quot;image&quot;&gt;
&lt;!-- &lt;caption align=&quot;bottom&quot;&gt;&lt;b&gt;$k$-cluster stopping does not satisfy richness. &lt;/b&gt;&lt;/caption&gt; --&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/itsneuronalblog/img/clustering/k-stopping-violation.png&quot; alt=&quot;&quot; width=&quot;500px&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p style=&quot;text-align:center; padding:0 50px; font-size:15px;&quot;&gt;
	&lt;b&gt;$k$-cluster stopping does not satisfy richness&lt;/b&gt;
	
&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;2. Distance-$r$ stopping condition:&lt;/strong&gt; Stop when the nearest two clusters are farther than a pre-defined distance $r$.&lt;/p&gt;

&lt;p&gt;This satisfies &lt;em&gt;richness&lt;/em&gt; — we can place $N$ points to end up in $N$ clusters by having the minimum distance between any two points to be greater than $r$, we can place $N$ points to end up in one cluster by having the maximum distance be less than $r$, and we can generate all partitions between these extremes.&lt;/p&gt;

&lt;p&gt;It also satisfies &lt;em&gt;consistency&lt;/em&gt;. Shrinking the distances between points in a cluster keeps the maximum distance less than $r$ (our criterion for defining a cluster in the first place). Expanding the distances between points in different clusters keeps the minimum distance greater than $r$. Thus, the clusters remain the same.&lt;/p&gt;

&lt;p&gt;However, &lt;em&gt;scale-invariance&lt;/em&gt; is violated. If we multiply the data by a large enough number, then the $N$ points will be assigned $N$ different clusters (all points are more than distance $r$ from each other). If we multiply the data by a number close to zero, everything ends up in the same cluster.&lt;/p&gt;

&lt;!--
Credit goes to http://stackoverflow.com/questions/19331362/using-an-image-caption-in-markdown-jekyll
 --&gt;
&lt;table class=&quot;image&quot;&gt;
&lt;!-- &lt;caption align=&quot;bottom&quot;&gt;&lt;b&gt;distance-$r$ stopping does not satisfy scale-invariance. &lt;/b&gt;&lt;/caption&gt; --&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/itsneuronalblog/img/clustering/distance-r-violation.png&quot; alt=&quot;&quot; width=&quot;500px&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p style=&quot;text-align:center; padding:0 50px; font-size:15px;&quot;&gt;
	&lt;b&gt;distance-$r$ stopping does not satisfy scale-invariance&lt;/b&gt;
	
&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;3. Scale-$\epsilon$ stopping condition:&lt;/strong&gt; Stop when the nearest two clusters are farther than a fraction of the maximum distance between two points. This is like the distance-$r$ stopping condition, except we choose $r = \epsilon \cdot \Delta$, where $\Delta$ is the maximum distance between any two data points and $\epsilon$ is a number between 0 and 1.&lt;/p&gt;

&lt;p&gt;By adapting $r$ to the scale of the data, this procedure now satisfies &lt;em&gt;scale-invariance&lt;/em&gt; in addition to &lt;em&gt;richness&lt;/em&gt;. However, it &lt;strong&gt;does not&lt;/strong&gt; satisfy &lt;em&gt;consistency&lt;/em&gt;. To see this, consider the following transformation of data, in which one cluster (the green one) is pulled much further away from the other two clusters. This increases the maximum distance between data points, leading us to merge the blue and red clusters into one:&lt;/p&gt;

&lt;!--
Credit goes to http://stackoverflow.com/questions/19331362/using-an-image-caption-in-markdown-jekyll
 --&gt;
&lt;table class=&quot;image&quot;&gt;
&lt;!-- &lt;caption align=&quot;bottom&quot;&gt;&lt;b&gt;scale-$\epsilon$ stopping does not satisfy consistency. &lt;/b&gt;&lt;/caption&gt; --&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/itsneuronalblog/img/clustering/clustering-consistency-violation.png&quot; alt=&quot;&quot; width=&quot;500px&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p style=&quot;text-align:center; padding:0 50px; font-size:15px;&quot;&gt;
	&lt;b&gt;scale-$\epsilon$ stopping does not satisfy consistency&lt;/b&gt;
	
&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&quot;sidestepping-impossibility-and-subsequent-work&quot;&gt;Sidestepping impossibility and subsequent work&lt;/h3&gt;

&lt;p&gt;Kleinberg’s analysis outlines what we &lt;strong&gt;should not expect&lt;/strong&gt; clustering algorithms to do for us. It is good not to have unrealistic expectations. But can we circumvent his impossibility theorem, and are his axioms even really desirable?&lt;/p&gt;

&lt;p&gt;The consistency axiom is particularly suspect as illustrated below:&lt;/p&gt;

&lt;!--
Credit goes to http://stackoverflow.com/questions/19331362/using-an-image-caption-in-markdown-jekyll
 --&gt;
&lt;table class=&quot;image&quot;&gt;
&lt;!-- &lt;caption align=&quot;bottom&quot;&gt;&lt;b&gt;Is consistency a desirable axiom?. &lt;/b&gt;&lt;/caption&gt; --&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/itsneuronalblog/img/clustering/clustering-consistency-problem.png&quot; alt=&quot;&quot; width=&quot;500px&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p style=&quot;text-align:center; padding:0 50px; font-size:15px;&quot;&gt;
	&lt;b&gt;Is consistency a desirable axiom?&lt;/b&gt;
	
&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;The problem is that our intuitive sense of clustering would probably lead us to merge the two clusters in the lower left corner. This criticism is taken up in &lt;a href=&quot;http://www.cs.fsu.edu/~ackerman/thesisPhD.pdf&quot;&gt;Margareta Ackerman’s thesis&lt;/a&gt;, which I hope to summarize in a future blog post.&lt;/p&gt;

&lt;p&gt;Many clustering algorithms also ignore the &lt;em&gt;richness&lt;/em&gt; axiom by specifying the number of clusters beforehand. For example, we can run $k$-means multiple times with different choices of $k$, allowing us to re-interpret the same dataset at different levels of granularity. &lt;a href=&quot;http://stanford.edu/~rezab/papers/slunique.pdf&quot;&gt;Zadeh &amp;amp; Ben-David (2009)&lt;/a&gt; study a relaxation of the richness axiom, which they call $k$-richness — a desirable clustering function should produce all possible $k$-partitions of a datset (rather than &lt;strong&gt;all&lt;/strong&gt; partitions).&lt;/p&gt;

&lt;p&gt;Overall, Kleinberg’s axiomatic approach provides an interesting perspective on clustering, but his analysis serves more as a starting point, rather than a definitive theoretical characterization of clustering.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;share-page&quot;&gt;
    &lt;strong&gt;
    Share this on &amp;rarr; 
    &amp;nbsp;&amp;nbsp;
    &lt;a href=&quot;https://twitter.com/intent/tweet?text=Is clustering mathematically impossible?&amp;amp;url=http://alexhwilliams.info/itsneuronalblog/2015/10/01/clustering2/&amp;amp;via=ItsNeuronal&amp;amp;related=ItsNeuronal&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Share on Twitter&quot;&gt;Twitter&lt;/a&gt;
    &amp;nbsp;&amp;nbsp;
    &lt;a href=&quot;https://facebook.com/sharer.php?u=http://alexhwilliams.info/itsneuronalblog/2015/10/01/clustering2/&amp;amp;t=Is clustering mathematically impossible?&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Share on Facebook&quot;&gt;Facebook&lt;/a&gt;
    &amp;nbsp;&amp;nbsp;
    &lt;a href=&quot;https://plus.google.com/share?url=http://alexhwilliams.info/itsneuronalblog/2015/10/01/clustering2/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Share on Google+&quot;&gt;Google+&lt;/a&gt;
	&amp;nbsp;&amp;nbsp;
	&lt;a href=&quot;http://www.reddit.com/submit?url=http://alexhwilliams.info/itsneuronalblog/2015/10/01/clustering2/&amp;amp;title=Is clustering mathematically impossible?&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Share on Google+&quot;&gt;Reddit&lt;/a&gt;
    &lt;/strong&gt;
&lt;/div&gt;

&lt;h4 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h4&gt;

&lt;p class=&quot;footnotes&quot;&gt;
&lt;a href=&quot;#f1t&quot; id=&quot;f1b&quot;&gt;&lt;b&gt;[1]&lt;/b&gt;&lt;/a&gt; I am using loose language when I say clustering is a “hard problem.” Similar to the &lt;a href=&quot;http://localhost:4000/itsneuronalblog/2015/09/11/clustering1/&quot;&gt;previous post&lt;/a&gt;, we will be concerned with why clustering is hard on a conceptual/theoretical level. But it is also worth pointing out that clustering is hard on a computational level — it takes a long time to compute a provably optimal solution. For example, &lt;em&gt;k&lt;/em&gt;-means is provably NP-hard for even k=2 clusters &lt;a href=&quot;https://dx.doi.org/10.1007%2Fs10994-009-5103-0&quot;&gt;(Aloise et al., 2009)&lt;/a&gt;. This is because cluster assignment is a discrete variable (a point &lt;em&gt;either&lt;/em&gt; belongs to a cluster or does not); in many cases, discrete optimization problems are more difficult to solve than continuous problems because we can compute the derivatives of the objective function and thus take advantage of gradient-based methods. (However this &lt;a href=&quot;http://cstheory.stackexchange.com/questions/31054/is-it-a-rule-that-discrete-problems-are-np-hard-and-continuous-problems-are-not&quot;&gt;doesn’t entirely account for&lt;/a&gt; the hardness.)
&lt;/p&gt;
&lt;p class=&quot;footnotes&quot;&gt;
&lt;a href=&quot;#f2t&quot; id=&quot;f2b&quot;&gt;&lt;b&gt;[2]&lt;/b&gt;&lt;/a&gt; Kleinberg (2002) only requires that the distance be nonnegative and symmetric, $d(x_i,x_j) = d(x_j,x_i)$, and not necessarily satisfy the &lt;a href=&quot;https://en.wikipedia.org/wiki/Triangle_inequality&quot;&gt;triangle inequality&lt;/a&gt;. According to Wikipedia these are called &lt;a href=&quot;https://en.wikipedia.org/wiki/Metric_(mathematics)#Semimetrics&quot;&gt;&lt;em&gt;semimetrics&lt;/em&gt;&lt;/a&gt;. There are many other exotic distance functions that fit within this space. For example, we can choose other &lt;a href=&quot;https://en.wikipedia.org/wiki/Norm_(mathematics)&quot;&gt;vector norms&lt;/a&gt; $d(x,y) = ||x -y||$ or information theoretic quantities like &lt;a href=&quot;https://en.wikipedia.org/wiki/Jensen%E2%80%93Shannon_divergence&quot;&gt;&lt;em&gt;Jensen-Shannon divergence&lt;/em&gt;&lt;/a&gt;.
&lt;/p&gt;
&lt;p class=&quot;footnotes&quot;&gt;
&lt;a href=&quot;#f3t&quot; id=&quot;f3b&quot;&gt;&lt;b&gt;[3]&lt;/b&gt;&lt;/a&gt; Interesting side note: the title of Kleinberg’s paper — &lt;em&gt;An Impossibility Theorem for Clustering&lt;/em&gt; — is an homage to &lt;a href=&quot;https://en.wikipedia.org/wiki/Arrow%27s_impossibility_theorem&quot;&gt;&lt;em&gt;Kenneth Arrow’s impossibility theorem&lt;/em&gt;&lt;/a&gt;, which roughly states that there is no “fair” voting system in which voters rank three or more choices. As in Kleinberg’s approach, “fairness” is defined by three axioms, which cannot be simultaneously satisfied.
&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>What is clustering and why is it hard?</title>
   <link href="http://alexhwilliams.info/2015/09/11/clustering1/"/>
   <updated>2015-09-11T00:00:00-07:00</updated>
   <id>http://alexhwilliams.info/2015/09/11/clustering1</id>
   <content type="html">&lt;p&gt;I’ve been working on some clustering techniques to &lt;a href=&quot;http://alexhwilliams.info/pubs/DoE_2015_DNA_meth.compressed.pdf&quot;&gt;identify cell types from DNA methylation data&lt;/a&gt;. When you dive into the literature on clustering, two things becomes immediately apparent: first, clustering is fundamental to many scientific questions, and second, there is &lt;a href=&quot;http://stanford.edu/~rezab/papers/slunique.pdf&quot;&gt;“distressingly little general theory”&lt;/a&gt; on how it works or how to apply it to your particular data.&lt;/p&gt;

&lt;p&gt;This was surprising to me. I imagine that most biologists and neuroscientists come across &lt;a href=&quot;https://en.wikipedia.org/wiki/K-means_clustering&quot;&gt;k-means clustering&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Hierarchical_clustering&quot;&gt;hierarchical clustering&lt;/a&gt;, and similar techniques all the time in papers related to their work. Given how commonplace these techniques are, one would think that we have a solid handle on how they work and what can go wrong.&lt;/p&gt;

&lt;p&gt;This will be the first post in a short series on clustering techniques. I will try to explain why clustering is hard from a high-level, intuitive perspective. The next post will cover some more technical theoretical results. I’ll focus on &lt;a href=&quot;http://web.stanford.edu/~rezab/classes/cme305/W15/Notes/Kleinberg%20-%20impossibility%20theorem.pdf&quot;&gt;Jon Kleinberg’s paper&lt;/a&gt; which precisely defines an ideal clustering function, but then proves that &lt;strong&gt;&lt;em&gt;no such function exists&lt;/em&gt;&lt;/strong&gt; and that there are inevitable tradeoffs that must be made. The final few posts will cover other theoretical work and some current projects of mine.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;what-is-clustering&quot;&gt;What is clustering?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Clustering&quot;&gt;&lt;em&gt;Clustering&lt;/em&gt;&lt;/a&gt; is difficult because it is an &lt;em&gt;unsupervised learning&lt;/em&gt; problem: we are given a dataset and are asked to infer structure within it (in this case, the latent clusters/categories in the data). The problem is that there isn’t necessarily a “correct” or ground truth solution that we can refer to if we want to check our answers. This is in contrast to &lt;a href=&quot;https://en.wikipedia.org/wiki/Statistical_classification&quot;&gt;&lt;em&gt;classification problems&lt;/em&gt;&lt;/a&gt;, where we do know the ground truth. Deep artificial neural networks are very good at classification (&lt;a href=&quot;http://bits.blogs.nytimes.com/2014/08/18/computer-eyesight-gets-a-lot-more-accurate/&quot;&gt;&lt;em&gt;NYT article&lt;/em&gt;&lt;/a&gt;; &lt;a href=&quot;http://www.image-net.org/papers/imagenet_cvpr09.pdf&quot;&gt;Deng et al. 2009&lt;/a&gt;), but clustering is still a very open problem.&lt;/p&gt;

&lt;p&gt;For example, it is a classification problem to predict whether or not a patient has a common disease based on a list of symptoms. In this case, we can draw upon past clinical records to make this judgment, and we can gather further data (e.g. a blood test) to confirm our prediction. In other words, we assume there is a self-evident ground truth (the patient either has or does not have disease X) that can be observed.&lt;/p&gt;

&lt;p&gt;For clustering, we lack this critical information. For example, suppose you are given a large number of beetles and told to group them into clusters based on their appearance. Assuming that you aren’t an entomologist, this will involve some judgment calls and guesswork.&lt;sup&gt;[1]&lt;/sup&gt; If you and a friend sort the same 100 beetles into 5 groups, you will likely come up with slightly different answers. And — here’s the important part — there isn’t really a way to determine which one of you is “right”.&lt;/p&gt;

&lt;h3 id=&quot;approaches-for-clustering&quot;&gt;Approaches for clustering&lt;/h3&gt;

&lt;p&gt;There is a lot of material written on this already, so rather than re-hash what’s out there I will just point you to the best resources.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;K-means clustering&lt;/strong&gt;  (&lt;a href=&quot;https://en.wikipedia.org/wiki/K-means_clustering&quot;&gt;&lt;em&gt;Wikipedia&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;http://www.bytemuse.com/post/k-means-clustering-visualization/&quot;&gt;Visualization by @ChrisPolis&lt;/a&gt;, &lt;a href=&quot;http://tech.nitoyon.com/en/blog/2013/11/07/k-means/&quot;&gt;Visualization by TECH-NI blog&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Hierarchical clustering&lt;/strong&gt; works by starting with each datapoint in its own cluster and fusing the nearest clusters together repeatedly (&lt;a href=&quot;https://en.wikipedia.org/wiki/Hierarchical_clustering&quot;&gt;&lt;em&gt;Wikipedia&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://youtu.be/XJ3194AmH40&quot;&gt;&lt;em&gt;Youtube #1&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://youtu.be/VMyXc3SiEqs&quot;&gt;&lt;em&gt;Youtube #2&lt;/em&gt;&lt;/a&gt;).&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Single-linkage_clustering&quot;&gt;&lt;strong&gt;Single-linkage clustering&lt;/strong&gt;&lt;/a&gt; is a particularly popular and well-characterized form of hierarchical clustering. Briefly, single-linkage begins by initializing each point as its own cluster, and then repeatedly combining the two closest clusters (as measured by their closest points of approach) until the desired number of clusters is achieved.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Bayesian methods&lt;/strong&gt; include &lt;a href=&quot;http://ifas.jku.at/gruen/BayesMix/bayesmix-intro.pdf&quot;&gt;finite mixture models&lt;/a&gt; and &lt;a href=&quot;http://www.kyb.tue.mpg.de/fileadmin/user_upload/files/publications/pdfs/pdf2299.pdf&quot;&gt;infinite mixture models&lt;/a&gt;.&lt;sup&gt;[2]&lt;/sup&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The important thing to realize is that all of these approaches are &lt;a href=&quot;http://cseweb.ucsd.edu/~avattani/papers/kmeans_hardness.pdf&quot;&gt;very computationally difficult&lt;/a&gt; to solve exactly for large datasets (more on this in my next post). As a result, we often resort to optimization heuristics that may or may not produce reasonable results. And, as we will soon see, even if the results are “reasonable” from the algorithm’s perspective, they might not align with our intuition, prior knowledge, or desired outcome.&lt;/p&gt;

&lt;h3 id=&quot;it-is-difficult-to-determine-the-number-of-clusters-in-a-dataset&quot;&gt;It is difficult to determine the number of clusters in a dataset&lt;/h3&gt;

&lt;p&gt;This has to be the most widely understood problem with clustering. In fact, there is an &lt;a href=&quot;https://en.wikipedia.org/wiki/Determining_the_number_of_clusters_in_a_data_set&quot;&gt;&lt;em&gt;entire Wikipedia article&lt;/em&gt;&lt;/a&gt; devoted to it. If you think about the problem for long enough, you will come to the inescapable conclusion is that there is no “true” number of clusters (though some numbers &lt;strong&gt;&lt;em&gt;feel&lt;/em&gt;&lt;/strong&gt; better than others), and that the same dataset is appropriately viewed at various levels of granularity depending on analysis goals.&lt;/p&gt;

&lt;!--
Credit goes to http://stackoverflow.com/questions/19331362/using-an-image-caption-in-markdown-jekyll
 --&gt;
&lt;table class=&quot;image&quot;&gt;
&lt;!-- &lt;caption align=&quot;bottom&quot;&gt;&lt;b&gt;. &lt;/b&gt;&lt;/caption&gt; --&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/itsneuronalblog/img/clustering/clustering_ambiguity.png&quot; alt=&quot;&quot; width=&quot;400px&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p style=&quot;text-align:center; padding:0 50px; font-size:15px;&quot;&gt;
	&lt;b&gt;&lt;/b&gt;
	
&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;While this problem cannot be “solved” definitively, there are some nice ways of dealing with it. Hierarchical clustering approaches provide cluster assignments for all possible number of clusters, allowing the analyst or reader to view the data across different levels of granularity. There are also Bayesian approaches such as &lt;a href=&quot;http://blog.echen.me/2012/03/20/infinite-mixture-models-with-nonparametric-bayes-and-the-dirichlet-process/&quot;&gt;Dirichlet Process Mixture Models&lt;/a&gt; that adaptively estimate the number of clusters based on a hyperparameter which tunes dispersion. A number of recent papers have focused on &lt;em&gt;convex clustering&lt;/em&gt; techniques that fuse cluster centroids together in a continuous manner along a regularization path; this exposes a hierarchical structure for a clustering approach (roughly) similar to k-means.&lt;sup&gt;[3]&lt;/sup&gt; Of course, there are many other papers out there on this subject.&lt;sup&gt;[4]&lt;/sup&gt;&lt;/p&gt;

&lt;h3 id=&quot;it-is-difficult-to-cluster-outliers-even-if-they-form-a-common-group&quot;&gt;It is difficult to cluster outliers (even if they form a common group)&lt;/h3&gt;

&lt;p&gt;I recommend you read David Robinson’s excellent post on &lt;a href=&quot;http://stats.stackexchange.com/questions/133656/how-to-understand-the-drawbacks-of-k-means&quot;&gt;the shortcomings of k-means clustering&lt;/a&gt;. The following example he provides is particularly compelling:&lt;/p&gt;

&lt;!--
Credit goes to http://stackoverflow.com/questions/19331362/using-an-image-caption-in-markdown-jekyll
 --&gt;
&lt;table class=&quot;image&quot;&gt;
&lt;!-- &lt;caption align=&quot;bottom&quot;&gt;&lt;b&gt;Raw Data.. &lt;/b&gt;Three spherical clusters with variable numbers of elements/points.&lt;/caption&gt; --&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/itsneuronalblog/img/clustering/clustering_01.png&quot; alt=&quot;Three spherical clusters with variable numbers of elements/points.&quot; width=&quot;400px&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p style=&quot;text-align:center; padding:0 50px; font-size:15px;&quot;&gt;
	&lt;b&gt;Raw Data.&lt;/b&gt;
	Three spherical clusters with variable numbers of elements/points.
&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;The human eye can pretty easily separate these data into three groups, but the k-means algorithm fails pretty hard:&lt;/p&gt;

&lt;!--
Credit goes to http://stackoverflow.com/questions/19331362/using-an-image-caption-in-markdown-jekyll
 --&gt;
&lt;table class=&quot;image&quot;&gt;
&lt;!-- &lt;caption align=&quot;bottom&quot;&gt;&lt;b&gt;. &lt;/b&gt;&lt;/caption&gt; --&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/itsneuronalblog/img/clustering/clustering_02.png&quot; alt=&quot;&quot; width=&quot;500px&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p style=&quot;text-align:center; padding:0 50px; font-size:15px;&quot;&gt;
	&lt;b&gt;&lt;/b&gt;
	
&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Rather than assigning the points in the upper left corner to their own cluster, the algorithm breaks the largest cluster (in the upper right) into two clusters. In other words it tolerates a few large errors (upper left) in order to decrease the errors where data is particularly dense (upper right). This likely doesn’t align with our analysis, but it is &lt;em&gt;completely reasonable&lt;/em&gt; from the perspective of the algorithm. And again, &lt;strong&gt;&lt;em&gt;there isn’t a ground truth to show that the algorithm is “wrong” per se.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;it-is-difficult-to-cluster-non-spherical-overlapping-data&quot;&gt;It is difficult to cluster non-spherical, overlapping data&lt;/h3&gt;

&lt;p&gt;A final, related problem arises from the shape of the data clusters. Every clustering algorithm makes structural assumptions about the dataset that need to be considered. For example, k-means works by minimizing the total sum-of-squared distance to the cluster centroids. This can produce undesirable results when the clusters are elongated in certain directions — particularly when the between-cluster distance is smaller than the maximum within-cluster distance. Single-linkage clustering, in contrast, can perform well in these cases, since points are clustered together based on their nearest neighbor, which facilitates clustering along ‘paths’ in the dataset.&lt;/p&gt;

&lt;!--
Credit goes to http://stackoverflow.com/questions/19331362/using-an-image-caption-in-markdown-jekyll
 --&gt;
&lt;table class=&quot;image&quot;&gt;
&lt;!-- &lt;caption align=&quot;bottom&quot;&gt;&lt;b&gt;Datasets where single-linkage outperforms k-means.. &lt;/b&gt;If your dataset contains long paths, then single-linkage clustering (panels B and D) will typically perform better than k-means (panels A and C).&lt;/caption&gt; --&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/itsneuronalblog/img/clustering/kmeans_fail.png&quot; alt=&quot;If your dataset contains long paths, then single-linkage clustering (panels B and D) will typically perform better than k-means (panels A and C).&quot; width=&quot;500px&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p style=&quot;text-align:center; padding:0 50px; font-size:15px;&quot;&gt;
	&lt;b&gt;Datasets where single-linkage outperforms k-means.&lt;/b&gt;
	If your dataset contains long paths, then single-linkage clustering (panels B and D) will typically perform better than k-means (panels A and C).
&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;However, there is &lt;a href=&quot;https://en.wikipedia.org/wiki/No_free_lunch_theorem&quot;&gt;no free lunch&lt;/a&gt;.&lt;sup&gt;[5]&lt;/sup&gt; Single-linkage clustering is more sensitive to noise, because each clustering assignment is based on a single pair of datapoints (the pair with minimal distance). This can cause paths to form between overlapping clouds of points. In contrast, k-means uses a more global calculation — minimizing the distance to the nearest centroid summed over all points. As a result, k-means typically does a better job of identifying partially overlapping clusters.&lt;/p&gt;

&lt;!--
Credit goes to http://stackoverflow.com/questions/19331362/using-an-image-caption-in-markdown-jekyll
 --&gt;
&lt;table class=&quot;image&quot;&gt;
&lt;!-- &lt;caption align=&quot;bottom&quot;&gt;&lt;b&gt;A dataset where k-means outperforms single-linkage.. &lt;/b&gt;Single-linkage clustering tends to erroneously fuse together overlapping groups of points (red dots); small groups of outliers (black dots) are clustered together based on their small pairwise distances.&lt;/caption&gt; --&gt;
&lt;tr&gt;&lt;td&gt;&lt;img src=&quot;/itsneuronalblog/img/clustering/linkage_fail.png&quot; alt=&quot;Single-linkage clustering tends to erroneously fuse together overlapping groups of points (red dots); small groups of outliers (black dots) are clustered together based on their small pairwise distances.&quot; width=&quot;550px&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p style=&quot;text-align:center; padding:0 50px; font-size:15px;&quot;&gt;
	&lt;b&gt;A dataset where k-means outperforms single-linkage.&lt;/b&gt;
	Single-linkage clustering tends to erroneously fuse together overlapping groups of points (red dots); small groups of outliers (black dots) are clustered together based on their small pairwise distances.
&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;The above figures were schematically reproduced from &lt;a href=&quot;http://www.stat.cmu.edu/~cshalizi/350/lectures/08/lecture-08.pdf&quot;&gt;these lecture notes&lt;/a&gt; from a statistics course at Carnegie Mellon.&lt;/p&gt;

&lt;h3 id=&quot;are-there-solutions-these-problems&quot;&gt;Are there solutions these problems?&lt;/h3&gt;

&lt;p&gt;This post was meant to highlight the inherent difficulty of clustering rather than propose solutions to these issues. It may therefore come off as a bit pessimistic. There are many heuristics that can help overcome the above issues, but I think it is important to emphasize that these are &lt;strong&gt;&lt;em&gt;only heuristics&lt;/em&gt;&lt;/strong&gt;, not guarantees. While many of biologists treat k-means as an “off the shelf” clustering algorithm, we need to be at least a little careful when we do this.&lt;/p&gt;

&lt;p&gt;One of the more interesting heuristics worth reading up on is called &lt;a href=&quot;http://dx.doi.org/10.1109/ICPR.2002.1047450&quot;&gt;ensemble clustering&lt;/a&gt;. The basic idea is to average the outcomes of several clustering techniques or from the same technique fit from different random initializations. Each clustering fit may suffer from instability, but the average behavior of the ensemble of models will tend to be more desirable. This general trick is called &lt;a href=&quot;https://en.wikipedia.org/wiki/Ensemble_averaging&quot;&gt;&lt;em&gt;ensemble averaging&lt;/em&gt;&lt;/a&gt; and has been successfully applied to a number of machine learning problems.&lt;sup&gt;[6]&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;This post only provides a quick outline of the typical issues that arise for clustering problems. The details of the algorithms have been purposefully omitted, although a deep understanding of these issues likely requires a closer look at these specifics. &lt;a href=&quot;http://www.cse.msu.edu/biometrics/Publications/Clustering/JainClustering_PRL10.pdf&quot;&gt;Jain (2010)&lt;/a&gt; provides a more comprehensive review that is worth reading.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;share-page&quot;&gt;
    &lt;strong&gt;
    Share this on &amp;rarr; 
    &amp;nbsp;&amp;nbsp;
    &lt;a href=&quot;https://twitter.com/intent/tweet?text=What is clustering and why is it hard?&amp;amp;url=http://alexhwilliams.info/itsneuronalblog/2015/09/11/clustering1/&amp;amp;via=ItsNeuronal&amp;amp;related=ItsNeuronal&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Share on Twitter&quot;&gt;Twitter&lt;/a&gt;
    &amp;nbsp;&amp;nbsp;
    &lt;a href=&quot;https://facebook.com/sharer.php?u=http://alexhwilliams.info/itsneuronalblog/2015/09/11/clustering1/&amp;amp;t=What is clustering and why is it hard?&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Share on Facebook&quot;&gt;Facebook&lt;/a&gt;
    &amp;nbsp;&amp;nbsp;
    &lt;a href=&quot;https://plus.google.com/share?url=http://alexhwilliams.info/itsneuronalblog/2015/09/11/clustering1/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Share on Google+&quot;&gt;Google+&lt;/a&gt;
	&amp;nbsp;&amp;nbsp;
	&lt;a href=&quot;http://www.reddit.com/submit?url=http://alexhwilliams.info/itsneuronalblog/2015/09/11/clustering1/&amp;amp;title=What is clustering and why is it hard?&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Share on Google+&quot;&gt;Reddit&lt;/a&gt;
    &lt;/strong&gt;
&lt;/div&gt;

&lt;h4 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h4&gt;

&lt;p&gt;&lt;span class=&quot;footnotes&quot;&gt;
&lt;strong&gt;[1]&lt;/strong&gt; It will probably involve guesswork even if you are.&lt;br /&gt;
&lt;strong&gt;[2]&lt;/strong&gt; Highlighting the difficulty of clustering, &lt;a href=&quot;https://normaldeviate.wordpress.com/2012/08/04/mixture-models-the-twilight-zone-of-statistics/&quot;&gt;Larry Wasserman&lt;/a&gt; has joked that “mixtures, like tequila, are inherently evil and should be avoided at all costs.” &lt;a href=&quot;http://andrewgelman.com/2012/08/15/how-to-think-about-mixture-models/&quot;&gt;Andrew Gelman&lt;/a&gt; is slightly less pessimistic.&lt;br /&gt;
&lt;strong&gt;[3]&lt;/strong&gt; Convex clustering performs continuous clustering, similar to how &lt;a href=&quot;http://statweb.stanford.edu/~tibs/lasso/lasso.pdf&quot;&gt;LASSO&lt;/a&gt; performs continuous variable selection.&lt;br /&gt;
&lt;strong&gt;[4]&lt;/strong&gt; See &lt;a href=&quot;http://dx.doi.org/10.1111/1467-9868.00293&quot;&gt;Tibshirani et al. (2001)&lt;/a&gt;, &lt;a href=&quot;http://dx.doi.org/10.1186/gb-2002-3-7-research0036&quot;&gt;Dudoit &amp;amp; Fridlyand (2002)&lt;/a&gt;, &lt;a href=&quot;http://dx.doi.org/10.1109/34.990138&quot;&gt;Figueiredo &amp;amp; Jain (2002)&lt;/a&gt;, &lt;a href=&quot;http://dx.doi.org/10.1111/j.1541-0420.2007.00784.x&quot;&gt;Yan &amp;amp; Ye (2007)&lt;/a&gt;, &lt;a href=&quot;http://www.cs.berkeley.edu/~jordan/papers/kulis-jordan-icml12.pdf&quot;&gt;Kulis &amp;amp; Jordan (2012)&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;[5]&lt;/strong&gt; The &lt;a href=&quot;http://ti.arc.nasa.gov/m/profile/dhw/papers/78.pdf&quot;&gt;“no free lunch” theorem&lt;/a&gt; roughly states that whenever an algorithm performs well on a certain class of problems it is because it makes &lt;em&gt;good assumptions&lt;/em&gt; about those problems; however, you can always construct new problems that violate these assumptions, leading to worse performance. Interestingly, this basic idea pops up in other contexts. For example, certain feedback control systems can be engineered so that they are robust to particular perturbations, but such engineering renders them &lt;strong&gt;&lt;em&gt;more sensitive&lt;/em&gt;&lt;/strong&gt; to other forms of perturbations (see &lt;a href=&quot;https://en.wikipedia.org/wiki/Bode%27s_sensitivity_integral&quot;&gt;“waterbed effect.”&lt;/a&gt;)&lt;br /&gt;
&lt;strong&gt;[6]&lt;/strong&gt; See &lt;a href=&quot;https://en.wikipedia.org/wiki/Bootstrap_aggregating&quot;&gt;&lt;em&gt;bootstrap aggregation&lt;/em&gt;&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Random_forest&quot;&gt;&lt;em&gt;random forests&lt;/em&gt;&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Ensemble_learning&quot;&gt;&lt;em&gt;ensemble learning&lt;/em&gt;&lt;/a&gt;. Seminal work on this topic was done by &lt;a href=&quot;https://en.wikipedia.org/wiki/Leo_Breiman&quot;&gt;Leo Breiman &lt;/a&gt; — his papers are lucid, fascinating, and accessible, and I particularly recommend his 1996 article &lt;a href=&quot;http://dx.doi.org/10.1007/BF00058655&quot;&gt;“Bagging Predictors”&lt;/a&gt;. This is also covered in any modern textbook, such as &lt;em&gt;The Elements of Statistical Learning&lt;/em&gt;.
&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Roadmap for this blog</title>
   <link href="http://alexhwilliams.info/2015/08/13/roadmap/"/>
   <updated>2015-08-13T00:00:00-07:00</updated>
   <id>http://alexhwilliams.info/2015/08/13/roadmap</id>
   <content type="html">&lt;p&gt;I’ve been searching for a good way to organize my thoughts/research interests for the past couple of years. This website/blog has gone through a few iterations as a result, but I feel like I’ve finally converged on something that works and is manageable for me to maintain.&lt;/p&gt;

&lt;p&gt;I will update this post periodically as my research evolves and my interests shift. For now, I plan to be writing quick posts roughly once a month on a few different subjects/categories. For now, here is an outline:&lt;/p&gt;

&lt;h2 id=&quot;tutorials&quot;&gt;Tutorials:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;FORCE learning&lt;/li&gt;
  &lt;li&gt;Independent Components Analysis&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;small-stuff-that-im-working-on&quot;&gt;Small stuff that I’m working on:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Optimization and Matrix Factorization Tools in Julia&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;stuff-i-want-to-publish-soon&quot;&gt;Stuff I want to publish soon:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Models of mRNA and protein transport in dendrites&lt;/li&gt;
  &lt;li&gt;Clustering algorithms and factor analysis of DNA methylation patterns (and other epigenetic datasets)&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 

</feed>
